#!/usr/bin/env node

//Module dependencies.
let app = require('../app');
let debug = require('debug')('server:server');
let http = require('http');

//Get port from environment and store in Express.
let initPort = process.env.PORT || '3000';
let parsePort = parseInt(initPort, 10);
let port = (isNaN(parsePort) ? initPort : (parsePort >= 0) ? parsePort : false);
app.set('port', port);

//Create HTTP server.
let server = http.createServer(app);

//Listen on provided port, on all network interfaces.
server.listen(port);
server.on('error', (error) => {
  if (error.syscall !== 'listen') {
    throw error;
  }
  let bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  // handle specific listen errors with friendly messages
  switch (error.code) {
  case 'EACCES':
    console.error(bind + ' requires elevated privileges');
    process.exit(1);
    break;
  case 'EADDRINUSE':
    console.error(bind + ' is already in use');
    process.exit(1);
    break;
  default:
    throw error;
  }
});
server.on('listening', () => {
  let addr = server.address();
  let bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
});
